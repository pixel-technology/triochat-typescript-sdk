{
  "liblabVersion": "2.25.37",
  "date": "2025-07-22T08:08:09.540Z",
  "config": {
    "apiId": 2518,
    "sdkName": "triochat-sdk",
    "sdkVersion": "1.0.0",
    "languages": ["typescript"],
    "auth": [],
    "docs": [],
    "liblabVersion": "2",
    "deliveryMethods": ["zip"],
    "rawConfig": {
      "sdkName": "triochat-sdk",
      "apiVersion": "1.0.0",
      "apiName": "triochat-api",
      "specFilePath": "https://scheduler-backend-64ov.onrender.com/docs/swagger-json",
      "languages": ["typescript"],
      "createDocs": true,
      "languageOptions": {
        "typescript": {
          "npmName": "@triochat/triochat-sdk",
          "npmOrg": "triochat",
          "githubRepoName": "triochat-typescript-sdk",
          "sdkVersion": "1.0.0"
        }
      },
      "publishing": {
        "githubOrg": "pixel-technology"
      }
    },
    "liblabConfigVersion": "1.0.0",
    "apiVersion": "1.0.0",
    "apiName": "triochat-api",
    "specFilePath": "https://scheduler-backend-64ov.onrender.com/docs/swagger-json",
    "createDocs": true,
    "languageOptions": {
      "typescript": {
        "githubRepoName": "triochat-typescript-sdk",
        "ignoreFiles": [],
        "liblabVersion": "2",
        "renameIllegalModelProperties": true,
        "sdkVersion": "1.0.0",
        "bundle": true,
        "denoteCommon": false,
        "exportClassDefault": false,
        "generateEnumAs": "enum",
        "httpClient": "fetch",
        "npmName": "@triochat/triochat-sdk",
        "npmOrg": "triochat"
      }
    },
    "validationsToIgnore": [],
    "publishing": {
      "githubOrg": "pixel-technology",
      "platform": "github"
    },
    "analytics": {
      "streaming": false,
      "pagination": false
    },
    "devContainer": true,
    "generateEnv": true,
    "includeOptionalSnippetParameters": true,
    "responseHeaders": false,
    "buildAllModels": false,
    "multiTenant": true,
    "includeWatermark": true,
    "language": "typescript",
    "deliveryMethod": "zip",
    "hooks": {
      "enabled": false,
      "sourceDir": ""
    },
    "httpClient": "fetch",
    "githubRepoName": "triochat-typescript-sdk",
    "ignoreFiles": [],
    "renameIllegalModelProperties": true,
    "bundle": true,
    "denoteCommon": false,
    "exportClassDefault": false,
    "generateEnumAs": "enum",
    "npmName": "@triochat/triochat-sdk",
    "npmOrg": "triochat",
    "typescriptVersion": "5.3.3",
    "zodVersion": "3.22.0",
    "compilerOptions": {
      "target": "es6",
      "module": "Node16",
      "lib": ["es2018", "dom"]
    },
    "namingStrategy": "base",
    "usesFormData": false,
    "authentication": {},
    "environmentVariables": [],
    "fileOutput": "/tmp",
    "inferServiceNames": false,
    "httpLibrary": {
      "name": "fetch",
      "packages": {},
      "languages": ["typescript"],
      "types": {
        "packageName": "@types/isomorphic-fetch",
        "version": "^0.0.36"
      }
    },
    "retry": {
      "enabled": true,
      "maxAttempts": 3,
      "retryDelay": 150,
      "maxDelay": 5000,
      "retryDelayJitter": 50,
      "backOffFactor": 2,
      "httpCodesToRetry": [408, 429, 500, 502, 503, 504],
      "httpMethodsToRetry": ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS"]
    },
    "customQueries": {
      "paths": [],
      "rawQueries": [],
      "queriesData": []
    },
    "ai": false,
    "specType": "openapi"
  },
  "files": [
    "package.json",
    "tsconfig.json",
    "examples/tsconfig.json",
    "examples/package.json",
    "examples/README.md",
    "examples/src/index.ts",
    "src/http/client.ts",
    "src/services/scheduling/models/schedule-message-dto.ts",
    "src/services/scheduling/models/message-body-dto.ts",
    "src/services/scheduling/models/message-dto.ts",
    "src/services/scheduling/models/replay-run-dto.ts",
    ".gitignore",
    "src/services/base-service.ts",
    "src/services/scheduling/scheduling-service.ts",
    "src/services/internal/internal-service.ts",
    "src/services/campaign/campaign-service.ts",
    "src/index.ts",
    "src/services/scheduling/models/index.ts",
    "src/services/scheduling/index.ts",
    "src/services/internal/index.ts",
    "src/services/campaign/index.ts",
    "src/http/index.ts",
    "src/http/handlers/handler-chain.ts",
    "src/http/types.ts",
    "src/http/error.ts",
    "src/http/handlers/terminating-handler.ts",
    "src/http/handlers/hook-handler.ts",
    "src/http/hooks/custom-hook.ts",
    "src/http/hooks/hook.ts",
    "src/http/handlers/retry-handler.ts",
    "src/http/environment.ts",
    "src/http/handlers/response-validation-handler.ts",
    "src/services/scheduling/request-params.ts",
    "src/services/campaign/request-params.ts",
    "documentation/models/ScheduleMessageDto.md",
    "documentation/models/MessageBodyDto.md",
    "documentation/models/MessageDto.md",
    "documentation/models/Status.md",
    "documentation/models/DateRange.md",
    "documentation/models/ReplayRunDto.md",
    "src/http/handlers/request-validation-handler.ts",
    ".devcontainer/devcontainer.json",
    "src/http/transport/request.ts",
    "src/http/transport/request-builder.ts",
    "src/http/serialization/base-serializer.ts",
    "src/http/serialization/query-serializer.ts",
    "src/http/serialization/path-serializer.ts",
    "src/http/serialization/header-serializer.ts",
    "src/http/transport/request-fetch-adapter.ts",
    "src/http/transport/transport-hook-adapter.ts",
    "src/http/utils/line-decoder.ts",
    "src/http/utils/response-matcher.ts",
    "src/http/utils/content-type.ts",
    "src/http/errors/validation-error.ts",
    "src/http/transport/types.ts",
    "src/services/scheduling/models/status.ts",
    "src/services/scheduling/models/date-range.ts",
    "src/http/errors/throwable-error.ts",
    ".env.example",
    "documentation/services/InternalService.md",
    "documentation/services/CampaignService.md",
    "documentation/services/SchedulingService.md",
    "README.md"
  ]
}
